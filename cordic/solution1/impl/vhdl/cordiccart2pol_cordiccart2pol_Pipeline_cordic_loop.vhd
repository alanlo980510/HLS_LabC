-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cordiccart2pol_cordiccart2pol_Pipeline_cordic_loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    select_ln1697 : IN STD_LOGIC_VECTOR (14 downto 0);
    select_ln1697_1 : IN STD_LOGIC_VECTOR (14 downto 0);
    x_cordic_V_5_out : OUT STD_LOGIC_VECTOR (14 downto 0);
    x_cordic_V_5_out_ap_vld : OUT STD_LOGIC;
    theta_out_V_out : OUT STD_LOGIC_VECTOR (14 downto 0);
    theta_out_V_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of cordiccart2pol_cordiccart2pol_Pipeline_cordic_loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv15_C91 : STD_LOGIC_VECTOR (14 downto 0) := "000110010010001";
    constant ap_const_lv15_76B : STD_LOGIC_VECTOR (14 downto 0) := "000011101101011";
    constant ap_const_lv15_3EB : STD_LOGIC_VECTOR (14 downto 0) := "000001111101011";
    constant ap_const_lv15_1FD : STD_LOGIC_VECTOR (14 downto 0) := "000000111111101";
    constant ap_const_lv15_100 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_const_lv15_80 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_const_lv15_40 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_const_lv15_20 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_const_lv15_10 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_const_lv15_8 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_const_lv15_4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln28_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_1_load_fu_389_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_429_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1008 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_cordic_V_4_fu_641_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_cordic_V_4_reg_1012 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_cordic_V_1_fu_647_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_cordic_V_1_reg_1017 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_cordic_V_3_fu_892_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_cordic_V_3_reg_1022 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_cordic_V_fu_898_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_cordic_V_reg_1027 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_mux_r_22_pn_phi_fu_171_p22 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1534_fu_627_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_reg_pp0_iter1_r_22_pn_reg_168 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1534_9_fu_447_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1534_8_fu_467_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1534_7_fu_487_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1534_6_fu_507_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1534_5_fu_527_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1534_4_fu_547_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1534_3_fu_567_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1534_2_fu_587_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1534_1_fu_607_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln28_fu_424_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_mux_r_23_pn_phi_fu_198_p22 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_4_fu_632_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_reg_pp0_iter1_r_23_pn_reg_195 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_13_fu_452_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_12_fu_472_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_11_fu_492_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_10_fu_512_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_9_fu_532_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_8_fu_552_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_7_fu_572_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_6_fu_592_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_5_fu_612_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_mux_r_42_pn_phi_fu_225_p22 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_fu_882_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_reg_pp0_iter1_r_42_pn_reg_222 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_28_fu_702_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_26_fu_722_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_24_fu_742_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_22_fu_762_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_20_fu_782_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_18_fu_802_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_16_fu_822_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_14_fu_842_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_2_fu_862_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_mux_r_25_pn_phi_fu_252_p22 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_1_fu_887_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_reg_pp0_iter1_r_25_pn_reg_249 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_29_fu_707_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_27_fu_727_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_25_fu_747_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_23_fu_767_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_21_fu_787_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_19_fu_807_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_17_fu_827_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_15_fu_847_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1534_3_fu_867_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal theta_out_V_fu_126 : STD_LOGIC_VECTOR (14 downto 0);
    signal theta_out_V_3_fu_681_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal theta_out_V_2_fu_932_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i_fu_130 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln28_fu_418_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal x_temp_V_fu_134 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_allocacmp_x_cordic_V_2 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_cordic_V_fu_138 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_allocacmp_y_cordic_V_1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal r_21_fu_437_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_276_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_19_fu_457_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_285_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_17_fu_477_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_294_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_15_fu_497_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_303_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_13_fu_517_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_312_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_11_fu_537_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_321_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_39_fu_557_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_330_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_8_fu_577_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_339_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_6_fu_597_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_348_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_4_fu_617_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_357_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln12_fu_637_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_fu_653_p13 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_37_fu_692_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_35_fu_712_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_33_fu_732_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_31_fu_752_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_29_fu_772_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_27_fu_792_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_25_fu_812_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_23_fu_832_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_2_fu_852_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_fu_872_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_fu_904_p13 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_689 : BOOLEAN;
    signal ap_condition_693 : BOOLEAN;
    signal ap_condition_696 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component cordiccart2pol_mux_114_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        din2 : IN STD_LOGIC_VECTOR (14 downto 0);
        din3 : IN STD_LOGIC_VECTOR (14 downto 0);
        din4 : IN STD_LOGIC_VECTOR (14 downto 0);
        din5 : IN STD_LOGIC_VECTOR (14 downto 0);
        din6 : IN STD_LOGIC_VECTOR (14 downto 0);
        din7 : IN STD_LOGIC_VECTOR (14 downto 0);
        din8 : IN STD_LOGIC_VECTOR (14 downto 0);
        din9 : IN STD_LOGIC_VECTOR (14 downto 0);
        din10 : IN STD_LOGIC_VECTOR (14 downto 0);
        din11 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component cordiccart2pol_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_114_15_1_1_U1 : component cordiccart2pol_mux_114_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        din2_WIDTH => 15,
        din3_WIDTH => 15,
        din4_WIDTH => 15,
        din5_WIDTH => 15,
        din6_WIDTH => 15,
        din7_WIDTH => 15,
        din8_WIDTH => 15,
        din9_WIDTH => 15,
        din10_WIDTH => 15,
        din11_WIDTH => 4,
        dout_WIDTH => 15)
    port map (
        din0 => ap_const_lv15_C91,
        din1 => ap_const_lv15_76B,
        din2 => ap_const_lv15_3EB,
        din3 => ap_const_lv15_1FD,
        din4 => ap_const_lv15_100,
        din5 => ap_const_lv15_80,
        din6 => ap_const_lv15_40,
        din7 => ap_const_lv15_20,
        din8 => ap_const_lv15_10,
        din9 => ap_const_lv15_8,
        din10 => ap_const_lv15_4,
        din11 => i_fu_130,
        dout => tmp_fu_653_p13);

    mux_114_15_1_1_U2 : component cordiccart2pol_mux_114_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        din2_WIDTH => 15,
        din3_WIDTH => 15,
        din4_WIDTH => 15,
        din5_WIDTH => 15,
        din6_WIDTH => 15,
        din7_WIDTH => 15,
        din8_WIDTH => 15,
        din9_WIDTH => 15,
        din10_WIDTH => 15,
        din11_WIDTH => 4,
        dout_WIDTH => 15)
    port map (
        din0 => ap_const_lv15_C91,
        din1 => ap_const_lv15_76B,
        din2 => ap_const_lv15_3EB,
        din3 => ap_const_lv15_1FD,
        din4 => ap_const_lv15_100,
        din5 => ap_const_lv15_80,
        din6 => ap_const_lv15_40,
        din7 => ap_const_lv15_20,
        din8 => ap_const_lv15_10,
        din9 => ap_const_lv15_8,
        din10 => ap_const_lv15_4,
        din11 => i_fu_130,
        dout => tmp_1_fu_904_p13);

    flow_control_loop_pipe_sequential_init_U : component cordiccart2pol_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    i_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_130 <= ap_const_lv4_0;
                elsif (((icmp_ln28_fu_412_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    i_fu_130 <= add_ln28_fu_418_p2;
                end if;
            end if; 
        end if;
    end process;

    theta_out_V_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    theta_out_V_fu_126 <= ap_const_lv15_0;
                elsif ((ap_const_boolean_1 = ap_condition_696)) then 
                    theta_out_V_fu_126 <= theta_out_V_2_fu_932_p2;
                elsif ((ap_const_boolean_1 = ap_condition_693)) then 
                    theta_out_V_fu_126 <= theta_out_V_3_fu_681_p2;
                end if;
            end if; 
        end if;
    end process;

    x_temp_V_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_temp_V_fu_134 <= select_ln1697;
                elsif (((tmp_2_reg_1008 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    x_temp_V_fu_134 <= x_cordic_V_reg_1027;
                elsif (((tmp_2_reg_1008 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    x_temp_V_fu_134 <= x_cordic_V_1_reg_1017;
                end if;
            end if; 
        end if;
    end process;

    y_cordic_V_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    y_cordic_V_fu_138 <= select_ln1697_1;
                elsif (((tmp_2_reg_1008 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    y_cordic_V_fu_138 <= y_cordic_V_3_reg_1022;
                elsif (((tmp_2_reg_1008 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    y_cordic_V_fu_138 <= y_cordic_V_4_reg_1012;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln28_fu_412_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_2_reg_1008 <= ap_sig_allocacmp_y_cordic_V_1(14 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_2_fu_429_p3 = ap_const_lv1_0) and (icmp_ln28_fu_412_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                x_cordic_V_1_reg_1017 <= x_cordic_V_1_fu_647_p2;
                y_cordic_V_4_reg_1012 <= y_cordic_V_4_fu_641_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_2_fu_429_p3 = ap_const_lv1_1) and (icmp_ln28_fu_412_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                x_cordic_V_reg_1027 <= x_cordic_V_fu_898_p2;
                y_cordic_V_3_reg_1022 <= y_cordic_V_3_fu_892_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln28_fu_418_p2 <= std_logic_vector(unsigned(i_fu_130) + unsigned(ap_const_lv4_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_689_assign_proc : process(i_1_load_fu_389_p1)
    begin
                ap_condition_689 <= (not((i_1_load_fu_389_p1 = ap_const_lv4_1)) and not((i_1_load_fu_389_p1 = ap_const_lv4_2)) and not((i_1_load_fu_389_p1 = ap_const_lv4_3)) and not((i_1_load_fu_389_p1 = ap_const_lv4_4)) and not((i_1_load_fu_389_p1 = ap_const_lv4_5)) and not((i_1_load_fu_389_p1 = ap_const_lv4_6)) and not((i_1_load_fu_389_p1 = ap_const_lv4_7)) and not((i_1_load_fu_389_p1 = ap_const_lv4_8)) and not((i_1_load_fu_389_p1 = ap_const_lv4_9)) and not((i_1_load_fu_389_p1 = ap_const_lv4_A)));
    end process;


    ap_condition_693_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln28_fu_412_p2, tmp_2_fu_429_p3)
    begin
                ap_condition_693 <= ((tmp_2_fu_429_p3 = ap_const_lv1_0) and (icmp_ln28_fu_412_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_696_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln28_fu_412_p2, tmp_2_fu_429_p3)
    begin
                ap_condition_696 <= ((tmp_2_fu_429_p3 = ap_const_lv1_1) and (icmp_ln28_fu_412_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln28_fu_412_p2)
    begin
        if (((icmp_ln28_fu_412_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_phi_mux_r_22_pn_phi_fu_171_p22_assign_proc : process(icmp_ln28_fu_412_p2, i_1_load_fu_389_p1, tmp_2_fu_429_p3, zext_ln1534_fu_627_p1, ap_phi_reg_pp0_iter1_r_22_pn_reg_168, zext_ln1534_9_fu_447_p1, zext_ln1534_8_fu_467_p1, zext_ln1534_7_fu_487_p1, zext_ln1534_6_fu_507_p1, zext_ln1534_5_fu_527_p1, zext_ln1534_4_fu_547_p1, zext_ln1534_3_fu_567_p1, zext_ln1534_2_fu_587_p1, zext_ln1534_1_fu_607_p1, trunc_ln28_fu_424_p1, ap_condition_689)
    begin
        if (((tmp_2_fu_429_p3 = ap_const_lv1_0) and (icmp_ln28_fu_412_p2 = ap_const_lv1_0))) then
            if ((ap_const_boolean_1 = ap_condition_689)) then 
                ap_phi_mux_r_22_pn_phi_fu_171_p22 <= trunc_ln28_fu_424_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_1)) then 
                ap_phi_mux_r_22_pn_phi_fu_171_p22 <= zext_ln1534_1_fu_607_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_2)) then 
                ap_phi_mux_r_22_pn_phi_fu_171_p22 <= zext_ln1534_2_fu_587_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_3)) then 
                ap_phi_mux_r_22_pn_phi_fu_171_p22 <= zext_ln1534_3_fu_567_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_4)) then 
                ap_phi_mux_r_22_pn_phi_fu_171_p22 <= zext_ln1534_4_fu_547_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_5)) then 
                ap_phi_mux_r_22_pn_phi_fu_171_p22 <= zext_ln1534_5_fu_527_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_6)) then 
                ap_phi_mux_r_22_pn_phi_fu_171_p22 <= zext_ln1534_6_fu_507_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_7)) then 
                ap_phi_mux_r_22_pn_phi_fu_171_p22 <= zext_ln1534_7_fu_487_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_8)) then 
                ap_phi_mux_r_22_pn_phi_fu_171_p22 <= zext_ln1534_8_fu_467_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_9)) then 
                ap_phi_mux_r_22_pn_phi_fu_171_p22 <= zext_ln1534_9_fu_447_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_A)) then 
                ap_phi_mux_r_22_pn_phi_fu_171_p22 <= zext_ln1534_fu_627_p1;
            else 
                ap_phi_mux_r_22_pn_phi_fu_171_p22 <= ap_phi_reg_pp0_iter1_r_22_pn_reg_168;
            end if;
        else 
            ap_phi_mux_r_22_pn_phi_fu_171_p22 <= ap_phi_reg_pp0_iter1_r_22_pn_reg_168;
        end if; 
    end process;


    ap_phi_mux_r_23_pn_phi_fu_198_p22_assign_proc : process(icmp_ln28_fu_412_p2, i_1_load_fu_389_p1, tmp_2_fu_429_p3, sext_ln1534_4_fu_632_p1, ap_phi_reg_pp0_iter1_r_23_pn_reg_195, sext_ln1534_13_fu_452_p1, sext_ln1534_12_fu_472_p1, sext_ln1534_11_fu_492_p1, sext_ln1534_10_fu_512_p1, sext_ln1534_9_fu_532_p1, sext_ln1534_8_fu_552_p1, sext_ln1534_7_fu_572_p1, sext_ln1534_6_fu_592_p1, sext_ln1534_5_fu_612_p1, ap_sig_allocacmp_x_cordic_V_2, ap_condition_689)
    begin
        if (((tmp_2_fu_429_p3 = ap_const_lv1_0) and (icmp_ln28_fu_412_p2 = ap_const_lv1_0))) then
            if ((ap_const_boolean_1 = ap_condition_689)) then 
                ap_phi_mux_r_23_pn_phi_fu_198_p22 <= ap_sig_allocacmp_x_cordic_V_2;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_1)) then 
                ap_phi_mux_r_23_pn_phi_fu_198_p22 <= sext_ln1534_5_fu_612_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_2)) then 
                ap_phi_mux_r_23_pn_phi_fu_198_p22 <= sext_ln1534_6_fu_592_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_3)) then 
                ap_phi_mux_r_23_pn_phi_fu_198_p22 <= sext_ln1534_7_fu_572_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_4)) then 
                ap_phi_mux_r_23_pn_phi_fu_198_p22 <= sext_ln1534_8_fu_552_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_5)) then 
                ap_phi_mux_r_23_pn_phi_fu_198_p22 <= sext_ln1534_9_fu_532_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_6)) then 
                ap_phi_mux_r_23_pn_phi_fu_198_p22 <= sext_ln1534_10_fu_512_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_7)) then 
                ap_phi_mux_r_23_pn_phi_fu_198_p22 <= sext_ln1534_11_fu_492_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_8)) then 
                ap_phi_mux_r_23_pn_phi_fu_198_p22 <= sext_ln1534_12_fu_472_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_9)) then 
                ap_phi_mux_r_23_pn_phi_fu_198_p22 <= sext_ln1534_13_fu_452_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_A)) then 
                ap_phi_mux_r_23_pn_phi_fu_198_p22 <= sext_ln1534_4_fu_632_p1;
            else 
                ap_phi_mux_r_23_pn_phi_fu_198_p22 <= ap_phi_reg_pp0_iter1_r_23_pn_reg_195;
            end if;
        else 
            ap_phi_mux_r_23_pn_phi_fu_198_p22 <= ap_phi_reg_pp0_iter1_r_23_pn_reg_195;
        end if; 
    end process;


    ap_phi_mux_r_25_pn_phi_fu_252_p22_assign_proc : process(icmp_ln28_fu_412_p2, i_1_load_fu_389_p1, tmp_2_fu_429_p3, sext_ln1534_1_fu_887_p1, ap_phi_reg_pp0_iter1_r_25_pn_reg_249, sext_ln1534_29_fu_707_p1, sext_ln1534_27_fu_727_p1, sext_ln1534_25_fu_747_p1, sext_ln1534_23_fu_767_p1, sext_ln1534_21_fu_787_p1, sext_ln1534_19_fu_807_p1, sext_ln1534_17_fu_827_p1, sext_ln1534_15_fu_847_p1, sext_ln1534_3_fu_867_p1, ap_sig_allocacmp_x_cordic_V_2, ap_condition_689)
    begin
        if (((tmp_2_fu_429_p3 = ap_const_lv1_1) and (icmp_ln28_fu_412_p2 = ap_const_lv1_0))) then
            if ((ap_const_boolean_1 = ap_condition_689)) then 
                ap_phi_mux_r_25_pn_phi_fu_252_p22 <= ap_sig_allocacmp_x_cordic_V_2;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_1)) then 
                ap_phi_mux_r_25_pn_phi_fu_252_p22 <= sext_ln1534_3_fu_867_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_2)) then 
                ap_phi_mux_r_25_pn_phi_fu_252_p22 <= sext_ln1534_15_fu_847_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_3)) then 
                ap_phi_mux_r_25_pn_phi_fu_252_p22 <= sext_ln1534_17_fu_827_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_4)) then 
                ap_phi_mux_r_25_pn_phi_fu_252_p22 <= sext_ln1534_19_fu_807_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_5)) then 
                ap_phi_mux_r_25_pn_phi_fu_252_p22 <= sext_ln1534_21_fu_787_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_6)) then 
                ap_phi_mux_r_25_pn_phi_fu_252_p22 <= sext_ln1534_23_fu_767_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_7)) then 
                ap_phi_mux_r_25_pn_phi_fu_252_p22 <= sext_ln1534_25_fu_747_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_8)) then 
                ap_phi_mux_r_25_pn_phi_fu_252_p22 <= sext_ln1534_27_fu_727_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_9)) then 
                ap_phi_mux_r_25_pn_phi_fu_252_p22 <= sext_ln1534_29_fu_707_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_A)) then 
                ap_phi_mux_r_25_pn_phi_fu_252_p22 <= sext_ln1534_1_fu_887_p1;
            else 
                ap_phi_mux_r_25_pn_phi_fu_252_p22 <= ap_phi_reg_pp0_iter1_r_25_pn_reg_249;
            end if;
        else 
            ap_phi_mux_r_25_pn_phi_fu_252_p22 <= ap_phi_reg_pp0_iter1_r_25_pn_reg_249;
        end if; 
    end process;


    ap_phi_mux_r_42_pn_phi_fu_225_p22_assign_proc : process(icmp_ln28_fu_412_p2, i_1_load_fu_389_p1, tmp_2_fu_429_p3, sext_ln1534_fu_882_p1, ap_phi_reg_pp0_iter1_r_42_pn_reg_222, sext_ln1534_28_fu_702_p1, sext_ln1534_26_fu_722_p1, sext_ln1534_24_fu_742_p1, sext_ln1534_22_fu_762_p1, sext_ln1534_20_fu_782_p1, sext_ln1534_18_fu_802_p1, sext_ln1534_16_fu_822_p1, sext_ln1534_14_fu_842_p1, sext_ln1534_2_fu_862_p1, ap_sig_allocacmp_y_cordic_V_1, ap_condition_689)
    begin
        if (((tmp_2_fu_429_p3 = ap_const_lv1_1) and (icmp_ln28_fu_412_p2 = ap_const_lv1_0))) then
            if ((ap_const_boolean_1 = ap_condition_689)) then 
                ap_phi_mux_r_42_pn_phi_fu_225_p22 <= ap_sig_allocacmp_y_cordic_V_1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_1)) then 
                ap_phi_mux_r_42_pn_phi_fu_225_p22 <= sext_ln1534_2_fu_862_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_2)) then 
                ap_phi_mux_r_42_pn_phi_fu_225_p22 <= sext_ln1534_14_fu_842_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_3)) then 
                ap_phi_mux_r_42_pn_phi_fu_225_p22 <= sext_ln1534_16_fu_822_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_4)) then 
                ap_phi_mux_r_42_pn_phi_fu_225_p22 <= sext_ln1534_18_fu_802_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_5)) then 
                ap_phi_mux_r_42_pn_phi_fu_225_p22 <= sext_ln1534_20_fu_782_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_6)) then 
                ap_phi_mux_r_42_pn_phi_fu_225_p22 <= sext_ln1534_22_fu_762_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_7)) then 
                ap_phi_mux_r_42_pn_phi_fu_225_p22 <= sext_ln1534_24_fu_742_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_8)) then 
                ap_phi_mux_r_42_pn_phi_fu_225_p22 <= sext_ln1534_26_fu_722_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_9)) then 
                ap_phi_mux_r_42_pn_phi_fu_225_p22 <= sext_ln1534_28_fu_702_p1;
            elsif ((i_1_load_fu_389_p1 = ap_const_lv4_A)) then 
                ap_phi_mux_r_42_pn_phi_fu_225_p22 <= sext_ln1534_fu_882_p1;
            else 
                ap_phi_mux_r_42_pn_phi_fu_225_p22 <= ap_phi_reg_pp0_iter1_r_42_pn_reg_222;
            end if;
        else 
            ap_phi_mux_r_42_pn_phi_fu_225_p22 <= ap_phi_reg_pp0_iter1_r_42_pn_reg_222;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_r_22_pn_reg_168 <= "XXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_r_23_pn_reg_195 <= "XXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_r_25_pn_reg_249 <= "XXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_r_42_pn_reg_222 <= "XXXXXXXXXXXXXXX";

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_x_cordic_V_2_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_2_reg_1008, x_cordic_V_1_reg_1017, x_cordic_V_reg_1027, ap_block_pp0_stage0, x_temp_V_fu_134)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((tmp_2_reg_1008 = ap_const_lv1_1)) then 
                ap_sig_allocacmp_x_cordic_V_2 <= x_cordic_V_reg_1027;
            elsif ((tmp_2_reg_1008 = ap_const_lv1_0)) then 
                ap_sig_allocacmp_x_cordic_V_2 <= x_cordic_V_1_reg_1017;
            else 
                ap_sig_allocacmp_x_cordic_V_2 <= x_temp_V_fu_134;
            end if;
        else 
            ap_sig_allocacmp_x_cordic_V_2 <= x_temp_V_fu_134;
        end if; 
    end process;


    ap_sig_allocacmp_y_cordic_V_1_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_2_reg_1008, y_cordic_V_4_reg_1012, y_cordic_V_3_reg_1022, ap_block_pp0_stage0, y_cordic_V_fu_138)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((tmp_2_reg_1008 = ap_const_lv1_1)) then 
                ap_sig_allocacmp_y_cordic_V_1 <= y_cordic_V_3_reg_1022;
            elsif ((tmp_2_reg_1008 = ap_const_lv1_0)) then 
                ap_sig_allocacmp_y_cordic_V_1 <= y_cordic_V_4_reg_1012;
            else 
                ap_sig_allocacmp_y_cordic_V_1 <= y_cordic_V_fu_138;
            end if;
        else 
            ap_sig_allocacmp_y_cordic_V_1 <= y_cordic_V_fu_138;
        end if; 
    end process;

    grp_fu_276_p4 <= ap_sig_allocacmp_x_cordic_V_2(14 downto 9);
    grp_fu_285_p4 <= ap_sig_allocacmp_x_cordic_V_2(14 downto 8);
    grp_fu_294_p4 <= ap_sig_allocacmp_x_cordic_V_2(14 downto 7);
    grp_fu_303_p4 <= ap_sig_allocacmp_x_cordic_V_2(14 downto 6);
    grp_fu_312_p4 <= ap_sig_allocacmp_x_cordic_V_2(14 downto 5);
    grp_fu_321_p4 <= ap_sig_allocacmp_x_cordic_V_2(14 downto 4);
    grp_fu_330_p4 <= ap_sig_allocacmp_x_cordic_V_2(14 downto 3);
    grp_fu_339_p4 <= ap_sig_allocacmp_x_cordic_V_2(14 downto 2);
    grp_fu_348_p4 <= ap_sig_allocacmp_x_cordic_V_2(14 downto 1);
    grp_fu_357_p4 <= ap_sig_allocacmp_x_cordic_V_2(14 downto 10);
    i_1_load_fu_389_p1 <= i_fu_130;
    icmp_ln28_fu_412_p2 <= "1" when (i_fu_130 = ap_const_lv4_B) else "0";
    r_11_fu_537_p4 <= ap_sig_allocacmp_y_cordic_V_1(13 downto 4);
    r_13_fu_517_p4 <= ap_sig_allocacmp_y_cordic_V_1(13 downto 5);
    r_15_fu_497_p4 <= ap_sig_allocacmp_y_cordic_V_1(13 downto 6);
    r_17_fu_477_p4 <= ap_sig_allocacmp_y_cordic_V_1(13 downto 7);
    r_19_fu_457_p4 <= ap_sig_allocacmp_y_cordic_V_1(13 downto 8);
    r_21_fu_437_p4 <= ap_sig_allocacmp_y_cordic_V_1(13 downto 9);
    r_23_fu_832_p4 <= ap_sig_allocacmp_y_cordic_V_1(14 downto 2);
    r_25_fu_812_p4 <= ap_sig_allocacmp_y_cordic_V_1(14 downto 3);
    r_27_fu_792_p4 <= ap_sig_allocacmp_y_cordic_V_1(14 downto 4);
    r_29_fu_772_p4 <= ap_sig_allocacmp_y_cordic_V_1(14 downto 5);
    r_2_fu_852_p4 <= ap_sig_allocacmp_y_cordic_V_1(14 downto 1);
    r_31_fu_752_p4 <= ap_sig_allocacmp_y_cordic_V_1(14 downto 6);
    r_33_fu_732_p4 <= ap_sig_allocacmp_y_cordic_V_1(14 downto 7);
    r_35_fu_712_p4 <= ap_sig_allocacmp_y_cordic_V_1(14 downto 8);
    r_37_fu_692_p4 <= ap_sig_allocacmp_y_cordic_V_1(14 downto 9);
    r_39_fu_557_p4 <= ap_sig_allocacmp_y_cordic_V_1(13 downto 3);
    r_4_fu_617_p4 <= ap_sig_allocacmp_y_cordic_V_1(13 downto 10);
    r_6_fu_597_p4 <= ap_sig_allocacmp_y_cordic_V_1(13 downto 1);
    r_8_fu_577_p4 <= ap_sig_allocacmp_y_cordic_V_1(13 downto 2);
    r_fu_872_p4 <= ap_sig_allocacmp_y_cordic_V_1(14 downto 10);
        sext_ln1534_10_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_303_p4),15));

        sext_ln1534_11_fu_492_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_294_p4),15));

        sext_ln1534_12_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_285_p4),15));

        sext_ln1534_13_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_276_p4),15));

        sext_ln1534_14_fu_842_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_23_fu_832_p4),15));

        sext_ln1534_15_fu_847_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_339_p4),15));

        sext_ln1534_16_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_25_fu_812_p4),15));

        sext_ln1534_17_fu_827_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_330_p4),15));

        sext_ln1534_18_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_27_fu_792_p4),15));

        sext_ln1534_19_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_321_p4),15));

        sext_ln1534_1_fu_887_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_357_p4),15));

        sext_ln1534_20_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_29_fu_772_p4),15));

        sext_ln1534_21_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_312_p4),15));

        sext_ln1534_22_fu_762_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_31_fu_752_p4),15));

        sext_ln1534_23_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_303_p4),15));

        sext_ln1534_24_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_33_fu_732_p4),15));

        sext_ln1534_25_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_294_p4),15));

        sext_ln1534_26_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_35_fu_712_p4),15));

        sext_ln1534_27_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_285_p4),15));

        sext_ln1534_28_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_37_fu_692_p4),15));

        sext_ln1534_29_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_276_p4),15));

        sext_ln1534_2_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_2_fu_852_p4),15));

        sext_ln1534_3_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_348_p4),15));

        sext_ln1534_4_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_357_p4),15));

        sext_ln1534_5_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_348_p4),15));

        sext_ln1534_6_fu_592_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_339_p4),15));

        sext_ln1534_7_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_330_p4),15));

        sext_ln1534_8_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_321_p4),15));

        sext_ln1534_9_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_312_p4),15));

        sext_ln1534_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_fu_872_p4),15));

    theta_out_V_2_fu_932_p2 <= std_logic_vector(unsigned(theta_out_V_fu_126) - unsigned(tmp_1_fu_904_p13));
    theta_out_V_3_fu_681_p2 <= std_logic_vector(unsigned(tmp_fu_653_p13) + unsigned(theta_out_V_fu_126));
    theta_out_V_out <= theta_out_V_fu_126;

    theta_out_V_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln28_fu_412_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln28_fu_412_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            theta_out_V_out_ap_vld <= ap_const_logic_1;
        else 
            theta_out_V_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_fu_429_p3 <= ap_sig_allocacmp_y_cordic_V_1(14 downto 14);
    trunc_ln28_fu_424_p1 <= ap_sig_allocacmp_y_cordic_V_1(14 - 1 downto 0);
    x_cordic_V_1_fu_647_p2 <= std_logic_vector(unsigned(zext_ln12_fu_637_p1) + unsigned(ap_sig_allocacmp_x_cordic_V_2));
    x_cordic_V_5_out <= x_temp_V_fu_134;

    x_cordic_V_5_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln28_fu_412_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln28_fu_412_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_cordic_V_5_out_ap_vld <= ap_const_logic_1;
        else 
            x_cordic_V_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    x_cordic_V_fu_898_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_x_cordic_V_2) - unsigned(ap_phi_mux_r_42_pn_phi_fu_225_p22));
    y_cordic_V_3_fu_892_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_y_cordic_V_1) + unsigned(ap_phi_mux_r_25_pn_phi_fu_252_p22));
    y_cordic_V_4_fu_641_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_y_cordic_V_1) - unsigned(ap_phi_mux_r_23_pn_phi_fu_198_p22));
    zext_ln12_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_r_22_pn_phi_fu_171_p22),15));
    zext_ln1534_1_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_6_fu_597_p4),14));
    zext_ln1534_2_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_8_fu_577_p4),14));
    zext_ln1534_3_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_39_fu_557_p4),14));
    zext_ln1534_4_fu_547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_11_fu_537_p4),14));
    zext_ln1534_5_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_13_fu_517_p4),14));
    zext_ln1534_6_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_15_fu_497_p4),14));
    zext_ln1534_7_fu_487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_17_fu_477_p4),14));
    zext_ln1534_8_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_19_fu_457_p4),14));
    zext_ln1534_9_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_21_fu_437_p4),14));
    zext_ln1534_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_4_fu_617_p4),14));
end behav;
