// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cordiccart2pol_cordiccart2pol,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=1000.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.606200,HLS_SYN_LAT=16,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=180,HLS_SYN_LUT=829,HLS_VERSION=2022_1}" *)

module cordiccart2pol (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        y,
        r,
        r_ap_vld,
        theta,
        theta_ap_vld
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [14:0] x;
input  [14:0] y;
output  [14:0] r;
output   r_ap_vld;
output  [14:0] theta;
output   theta_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg r_ap_vld;
reg theta_ap_vld;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] tmp_fu_100_p3;
reg   [0:0] tmp_reg_262;
wire   [14:0] select_ln1697_fu_120_p3;
reg   [14:0] select_ln1697_reg_267;
wire   [14:0] select_ln1697_1_fu_129_p3;
reg   [14:0] select_ln1697_1_reg_272;
reg   [8:0] r_3_reg_277;
wire    ap_CS_fsm_state3;
reg   [5:0] r_V_reg_282;
wire   [14:0] add_ln1394_fu_192_p2;
reg   [14:0] add_ln1394_reg_287;
wire    grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_start;
wire    grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_done;
wire    grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_idle;
wire    grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_ready;
wire   [14:0] grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_x_cordic_V_5_out;
wire    grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_x_cordic_V_5_out_ap_vld;
wire   [14:0] grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_theta_out_V_out;
wire    grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_theta_out_V_out_ap_vld;
reg    grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
wire   [14:0] x_cordic_V_fu_108_p2;
wire   [14:0] y_cordic_V_fu_114_p2;
wire   [13:0] r_1_fu_144_p4;
wire   [11:0] r_2_fu_158_p4;
wire  signed [14:0] sext_ln1534_fu_154_p1;
wire  signed [14:0] sext_ln1534_1_fu_168_p1;
wire   [0:0] tmp_3_fu_198_p3;
wire   [14:0] select_ln141_fu_205_p3;
wire   [14:0] add_ln141_fu_213_p2;
wire  signed [14:0] sext_ln1534_3_fu_230_p1;
wire   [14:0] sub_ln1394_fu_233_p2;
wire  signed [14:0] sext_ln1534_2_fu_227_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_start_reg = 1'b0;
end

cordiccart2pol_cordiccart2pol_Pipeline_cordic_loop grp_cordiccart2pol_Pipeline_cordic_loop_fu_92(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_start),
    .ap_done(grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_done),
    .ap_idle(grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_idle),
    .ap_ready(grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_ready),
    .select_ln1697(select_ln1697_reg_267),
    .select_ln1697_1(select_ln1697_1_reg_272),
    .x_cordic_V_5_out(grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_x_cordic_V_5_out),
    .x_cordic_V_5_out_ap_vld(grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_x_cordic_V_5_out_ap_vld),
    .theta_out_V_out(grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_theta_out_V_out),
    .theta_out_V_out_ap_vld(grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_theta_out_V_out_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_start_reg <= 1'b1;
        end else if ((grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_ready == 1'b1)) begin
            grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln1394_reg_287 <= add_ln1394_fu_192_p2;
        r_3_reg_277 <= {{grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_x_cordic_V_5_out[14:6]}};
        r_V_reg_282 <= {{grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_x_cordic_V_5_out[14:9]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        select_ln1697_1_reg_272 <= select_ln1697_1_fu_129_p3;
        select_ln1697_reg_267 <= select_ln1697_fu_120_p3;
        tmp_reg_262 <= x[32'd14];
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        r_ap_vld = 1'b1;
    end else begin
        r_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        theta_ap_vld = 1'b1;
    end else begin
        theta_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1394_fu_192_p2 = ($signed(sext_ln1534_fu_154_p1) + $signed(sext_ln1534_1_fu_168_p1));

assign add_ln141_fu_213_p2 = (select_ln141_fu_205_p3 + grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_theta_out_V_out);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_start = grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_ap_start_reg;

assign r = ($signed(sub_ln1394_fu_233_p2) - $signed(sext_ln1534_2_fu_227_p1));

assign r_1_fu_144_p4 = {{grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_x_cordic_V_5_out[14:1]}};

assign r_2_fu_158_p4 = {{grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_x_cordic_V_5_out[14:3]}};

assign select_ln141_fu_205_p3 = ((tmp_3_fu_198_p3[0:0] == 1'b1) ? 15'd19900 : 15'd12868);

assign select_ln1697_1_fu_129_p3 = ((tmp_fu_100_p3[0:0] == 1'b1) ? y_cordic_V_fu_114_p2 : y);

assign select_ln1697_fu_120_p3 = ((tmp_fu_100_p3[0:0] == 1'b1) ? x_cordic_V_fu_108_p2 : x);

assign sext_ln1534_1_fu_168_p1 = $signed(r_2_fu_158_p4);

assign sext_ln1534_2_fu_227_p1 = $signed(r_3_reg_277);

assign sext_ln1534_3_fu_230_p1 = $signed(r_V_reg_282);

assign sext_ln1534_fu_154_p1 = $signed(r_1_fu_144_p4);

assign sub_ln1394_fu_233_p2 = ($signed(add_ln1394_reg_287) - $signed(sext_ln1534_3_fu_230_p1));

assign theta = ((tmp_reg_262[0:0] == 1'b1) ? add_ln141_fu_213_p2 : grp_cordiccart2pol_Pipeline_cordic_loop_fu_92_theta_out_V_out);

assign tmp_3_fu_198_p3 = y[32'd14];

assign tmp_fu_100_p3 = x[32'd14];

assign x_cordic_V_fu_108_p2 = (15'd0 - x);

assign y_cordic_V_fu_114_p2 = (15'd0 - y);

endmodule //cordiccart2pol
